'use client'

import { motion } from 'framer-motion';
import { useEffect, useRef, useState } from 'react';
import { FaArrowLeft, FaArrowRight } from 'react-icons/fa';
import {AnimatePresence} from 'framer-motion';

type ImageItem = {
    src: string;
    title:string;
    paragraphs:string[];
}

const images: ImageItem[] = [
    {
        src: '/turtle.jpg',
        title: 'üå±ÏÉùÎ™ÖÏóê ÎåÄÌïú Ïï†Ï†ïÏúºÎ°ú ÏãúÏûëÎêú Î∞∞ÏõÄ',
        paragraphs: [
            "Ïñ¥Î¶∞ ÏãúÏ†àÎ∂ÄÌÑ∞ ÏàòÏ§ë ÏÉùÎ¨º, ÌäπÌûà Í±∞Î∂ÅÏù¥Î•º ÎèåÎ≥¥Îäî Í≤ÉÏù¥ ÎÇòÏùò Ïò§Îûú Ï∑®ÎØ∏ÏòÄÏäµÎãàÎã§.",
            "Îã®ÏàúÌûà ÌÇ§Ïö∞Îäî Í≤ÉÏùÑ ÎÑòÏñ¥ÏÑú, Ïù¥ ÏûëÏùÄ ÏÉùÎ™ÖÎì§Ïù¥ Ïñ¥ÎñªÍ≤å ÌïòÎ©¥ Í±¥Í∞ïÌïòÍ≥† ÏïàÏ†ïÎêú ÌôòÍ≤ΩÏóêÏÑú ÏûêÎûÑ Ïàò ÏûàÏùÑÏßÄ Îäò Í≥†ÎØºÌï¥ÏôîÏäµÎãàÎã§.",
            "Î¨ºÏùò Ïò®ÎèÑ, ÏàòÏßà, Î®πÏù¥Ïùò Ïßà ÌïòÎÇòÌïòÎÇòÏóê Ï£ºÏùòÎ•º Í∏∞Ïö∏Ïù¥Î©∞, ÏµúÏÉÅÏùò Ïª®ÎîîÏÖòÏùÑ Ïú†ÏßÄÌï† Ïàò ÏûàÎèÑÎ°ù ÏÑ∏Ïã¨ÌïòÍ≤å Í¥ÄÏ∞∞ÌïòÍ≥† Íæ∏Ï§ÄÌûà Í¥ÄÎ¶¨Ìï¥ÏôîÏäµÎãàÎã§.",
            "Ïù¥ Í≥ºÏ†ïÏùÄ ÏÉùÎ™ÖÏóê ÎåÄÌïú Ï±ÖÏûÑÍ∞êÏùÑ Î∞∞Ïö∞Îäî ÎèôÏãúÏóê, ÎÅàÍ∏∞ÏôÄ ÏÑ∏Î∞ÄÌïú Í¥ÄÏ∞∞Î†•, ÌôòÍ≤ΩÏóê ÎåÄÌïú ÎØºÍ∞êÌïú Í∞êÏàòÏÑ±ÏùÑ ÌÇ§Ïö∞Îäî ÏãúÍ∞ÑÏù¥ÏóàÏäµÎãàÎã§.",
            "ÏßÄÍ∏àÎèÑ Ï†ÄÎäî Ïñ¥Îñ§ ÏùºÏù¥Îì† ÏÉùÎ™ÖÏùÑ ÎåÄÌïòÎìØ Ïã†Ï§ëÌïòÍ≥† Ï†ïÏÑ±Ïä§ÎüΩÍ≤å Ï†ëÍ∑ºÌïòÎ†§Í≥† Ìï©ÎãàÎã§."
        ]
    },
    {
        src: '/movie.jpg',
        title: 'üé¨ÏòÅÌôî ÏÜçÏóêÏÑú Î∞∞Ïö∞Îäî ÍµêÌõàÍ≥º Í∞êÏ†ïÏùò ÏÑ±Ïû•',
        paragraphs:[
            "ÏòÅÌôîÎäî Îã®ÏàúÌûà Ïò§ÎùΩÏ†ÅÏù∏ ÏöîÏÜåÎ•º ÎÑòÏñ¥, Í∞ÅÍ∏∞ Îã§Î•∏ Ïù∏Î¨ºÎì§Ïùò ÏÇ∂ÏùÑ Îì§Ïó¨Îã§Î≥¥Î©∞ ÍµêÌõàÏùÑ ÏñªÎäî ÏãúÍ∞ÑÏù¥ÏóàÏäµÎãàÎã§.",
            "Ï£ºÏù∏Í≥µÏù¥ Í≥†ÎÇúÏùÑ Í≤™Í≥† Ïù¥Î•º Í∑πÎ≥µÌïòÎäî Í≥ºÏ†ïÏùÄ Ï†ÄÏóêÍ≤å ÎÅàÍ∏∞ÏôÄ Ïù∏ÎÇ¥Ïùò Ï§ëÏöîÏÑ±ÏùÑ Íπ®Îã´Í≤å Ìï¥Ï£ºÏóàÏäµÎãàÎã§.",
            "ÎòêÌïú, Í∑∏Îì§Ïù¥ Í≤™Îäî Í∞êÏ†ïÏùò Î≥ÄÌôîÎÇò Í∞àÎì± Ìï¥ÏÜå Î∞©Î≤ïÏùÑ ÌÜµÌï¥ Í∞êÏÑ±Ï†ÅÏù∏ ÏÑ±Ïû•ÏùÑ Í≤ΩÌóòÌñàÏäµÎãàÎã§.",
            "Ïù¥Îü¨Ìïú Í≤ΩÌóòÎì§ÏùÄ ÌòÑÏã§ÏóêÏÑúÎèÑ Îçî ÌÅ∞ Í≤∞Îã®ÏùÑ ÎÇ¥Î¶¥ Ïàò ÏûàÍ≤å ÎèÑÏõÄÏùÑ Ï£ºÏóàÍ≥†, Ïñ¥Î†§Ïö¥ ÏÉÅÌô©ÏóêÏÑú Í∞êÏ†ïÏ†ÅÏúºÎ°ú Îçî Îã®Îã®Ìï¥Ïßà Ïàò ÏûàÎäî ÏõêÎèôÎ†•Ïù¥ ÎêòÏóàÏäµÎãàÎã§."
        ]
    },
    {
        src: '/travel.jpg',
        title:'‚úàÔ∏èÎØ∏ÎûòÏóê ÎåÄÌïú ÌÉúÎèÑ, Ïó¨ÌñâÏóêÏÑú Í∏∏ÏùÑ ÏñªÎã§.',
        paragraphs:[
            "Ïó¨ÌñâÏùÄ Ï†ÄÏùò ÏÇ∂Í≥º ÏùºÏóê ÏûàÏñ¥ÏÑúÎèÑ Ïª§Îã§ÎûÄ ÏûêÏñëÎ∂ÑÏù¥ Îê©ÎãàÎã§.",
            "ÎàÑÍµ¨Î•º ÎßåÎÇòÎì† Í∑∏ ÏÇ¨ÎûåÏùò Î∞∞Í≤ΩÏùÑ Ï°¥Ï§ëÌïòÍ≥†, Îã§ÏñëÌïú ÏãúÍ∞ÅÏùÑ Ïú†Ïó∞ÌïòÍ≤å Î∞õÏïÑÎì§Ïù¥Îäî ÌÉúÎèÑÎäî ÌòëÏóÖÏù¥ÎÇò Ïª§ÎÆ§ÎãàÏºÄÏù¥ÏÖòÏóêÏÑú Í∞ïÏ†êÏù¥ Îê©ÎãàÎã§.",
            "ÎòêÌïú, ÏòàÏ∏°Ìï† Ïàò ÏóÜÎäî ÏÉÅÌô© ÏÜçÏóêÏÑú Ïú†Ïó∞ÌïòÍ≤å ÎåÄÏ≤òÌïòÎäî Ïó¨ÌñâÏûêÏùò ÌÉúÎèÑÎäî Ï†úÍ∞Ä Ïñ¥Îñ§ Î¨∏Ï†úÏóê ÏßÅÎ©¥Ìï¥ÎèÑ Ïπ®Ï∞©ÌïòÍ≥† Ï†ÑÎûµÏ†ÅÏúºÎ°ú Ï†ëÍ∑ºÌï† Ïàò ÏûàÍ≤å ÎèÑÏôÄÏ§çÎãàÎã§.",
            "Ïó¨ÌñâÏùÄ Í≤∞Íµ≠ ‚ÄòÏÇ¨ÎûåÏùÑ Î∞∞Ïö∞Îäî ÏãúÍ∞Ñ‚ÄôÏù¥ÏóàÏäµÎãàÎã§. Í∑∏ ÎßåÎÇ® ÏÜçÏóêÏÑú Ï†ÄÎäî Îã®Îã®Ìï¥Ï°åÍ≥†, ÎèôÏãúÏóê Ïú†Ïó∞Ìï¥Ï°åÏäµÎãàÎã§. Í∑∏ÎûòÏÑú Ï†ÄÎäî ÏïûÏúºÎ°úÎèÑ Îçî ÎßéÏùÄ ÏÇ¨ÎûåÏùÑ ÎßåÎÇòÍ≥†, Îçî ÎÑìÏùÄ ÏÇ∂ÏùÑ Î∞∞Ïö∞Í∏∞ ÏúÑÌï¥ Í≥ÑÏÜçÌï¥ÏÑú ÎÇØÏÑ† Í≥≥ÏúºÎ°ú Ìñ•Ìï† Í≤ÉÏûÖÎãàÎã§."
        ]
    },
];
const tmiSlides = [
    {
        src:'/tmi1.jpg',
        title:'',
        paragraphs:[

        ]
    },
    {
        src:'/tmi2.jpg',
        title:'',
        paragraphs:[

        ]
    },
    {
        src:'/tmi3.jpg',
        title:'',
        paragraphs:[

        ]
    },
];

export default function Hero() {
    const fullText = "ÏïàÎÖïÎÖïÌïòÏÑ∏Ïöî. FEÍ∞úÎ∞úÏûêÎ•º ÍøàÍæ∏Îäî ÍπÄÎèÑÍ±¥ÏûÖÎãàÎã§.";
    const textArray = fullText.split('');
    const [displayedText, setDisplayedText] = useState('');
    const indexRef = useRef(0);
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [currentSlide, setCurrentSlide] = useState(0);
    const [direction, setDirection] = useState(0);
    const [isTmiModalOpen, setIsTmiModalOpen] = useState(false);
    const [tmiSlide, setTmiSlide] = useState(0);
    const [tmiDirection, setTmiDirection] = useState(0);

    useEffect(() => {
        const interval = setInterval(() => {
            if (indexRef.current < textArray.length) {
                setDisplayedText(prev => prev + (textArray[indexRef.current] ?? ''));
                indexRef.current += 1;
            } else {
                clearInterval(interval);
            }
        }, 100);
        return () => clearInterval(interval);
    }, []);

    useEffect(() => {
        if(isModalOpen){
            document.body.style.overflow='hidden';
        }else{
            document.body.style.overflow='';
        }

        //cleanup(Ïñ∏ÎßàÏö¥Ìä∏ÎêòÍ±∞ÎÇò Îã´Ìûê Îïå Î≥µÍµ¨)
        return () => {
            document.body.style.overflow= '';
        };
    }, [isModalOpen]);

    //Ïä¨ÎùºÏù¥Îìú Ìï®Ïàò
    const nextSlide = () => {
        setDirection(1);
        setCurrentSlide((prev) => (prev + 1) % images.length);
    };

    const prevSlide = () => {
        setDirection(-1);
        setCurrentSlide((prev) => (prev - 1 + images.length) % images.length);
    };

    const nextTmiSlide = () => {
        setTmiDirection(1);
        setTmiSlide((prev) => (prev + 1) % tmiSlides.length);
    };

    const prevTmiSlide = () => {
        setTmiDirection(-1);
        setTmiSlide((prev) => (prev -1 + tmiSlides.length) % tmiSlides.length);
    };

    //Ïù¥ÎØ∏ÏßÄ Ïï†ÎãàÎ©îÏù¥ÏÖò ÏÑ§Ï†ï
    const variants = {
        enter: (direction: number) => ({
            x:direction > 0 ? 300 : -300,
            opacity: 0,
        }),
        center:{
            x:0,
            opacity: 1,
        },
        exit: (direction: number) => ({
            x: direction > 0  ? -300 : 300,
            opacity: 0,
        })
    }
    return (
        <section className="relative flex flex-col items-center justify-center min-h-screen px-4 text-center overflow-hidden">
            {/* ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ */}
            <motion.img
                src="profileimg.jpg"
                alt="ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ"
                className="w-60 h-60 rounded-xl shadow-lg mb-6"
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 1 }}
            />

            {/* ÏÜåÍ∞úÍ∏Ä */}
            <motion.p
                className="text-lg md:text-xl text-gray-700 mb-8"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 1.2, delay: 0.3 }}
            >
                {displayedText}
            </motion.p>

            <motion.p
                className="text-lg md:text-xl text-gray-300 mb-8"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 1.2, delay: 0.3 }}
            >
                Name : ÍπÄÎèÑÍ±¥<br/>
                Birth : 97.07.02<br/>
                Major : Aerospace Dynamic<br/>
            </motion.p>

            {/* Î≤ÑÌäº */}
            <motion.div
                className="flex gap-4"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 1.2, delay: 0.5 }}
            >
                <button
                    className="px-6 py-2 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition"
                    onClick={() => setIsModalOpen(true)}
                >
                    Hobby
                </button>
                <button
                    className="px-6 py-2 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition"
                    onClick={() => setIsTmiModalOpen(true)}
                >
                    TMI
                </button>
            </motion.div>

            {/* Î™®Îã¨ */}
            {isModalOpen && (
                <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50"
                    style={{backgroundColor:'rgba(0,0,0,0.5)'}}
                    onClick={() => setIsModalOpen(false)}//Î∞îÍπ• ÌÅ¥Î¶≠ Ïãú Îã´Ìûò
                >
                    <div className="relative bg-white p-6 rounded-xl max-w-2xl w-full"
                        onClick={(e) => e.stopPropagation()}    //ÎÇ¥Î∂Ä ÌÅ¥Î¶≠ Ïãú Îã´Í∏∞ Î∞©ÏßÄ
                    >
                        {/* Ïä¨ÎùºÏù¥Îçî */}
                        <div className="relative flex items-center justify-center mb-4 h-[300px]">
                            <button onClick={prevSlide} className="absolute left-0 p-2 text-gray-600 hover:text-black z-10">
                                <FaArrowLeft size={20}/>
                            </button>

                            <div className="w-full h-[300px] flex justify-center items-center overflow-hidden relative">
                                <AnimatePresence custom={direction} mode="wait">
                                    <motion.img
                                        key={`${currentSlide}-${images[currentSlide].src}`}
                                        src={images[currentSlide].src}
                                        alt={`Ïä¨ÎùºÏù¥Îìú ${currentSlide + 1}`}
                                        className="max-h-[300px] w-auto object-contain rounded-lg absolute"
                                        custom={direction}
                                        variants={variants}
                                        initial="enter"
                                        animate="center"
                                        exit="exit"
                                        transition={{
                                            x:{type: "spring",stiffness:300, damping:30},
                                            opacity: {duration: 0.2}
                                        }}
                                    />
                                </AnimatePresence>
                            </div>
                            <button onClick={nextSlide} className="absolute right-0 p-2 text-gray-600 hover:text-black z-10">
                                <FaArrowRight size={20}/>
                            </button>
                        </div>

                        {/* ÏÑ§Î™Ö ÌÖçÏä§Ìä∏ */}
                        <div className="text-center text-gray-700 mb-4">
                            <h2 className="text-xl font-bold mb-4">
                                {images[currentSlide].title}
                            </h2>
                            {images[currentSlide].paragraphs.map((para, index) => (
                                <p key={index} className="mb-2">{para}</p>
                            ))}
                        </div>

                        {/* Exit Î≤ÑÌäº */}
                        <div className="flex justify-center">
                            <button
                                onClick={() => setIsModalOpen(false)}
                                className="px-6 py-2 bg-red-500 text-white rounded-xl hover:bg-red-600 transition"
                            >
                                Exit
                            </button>
                        </div>
                    </div>
                </div>
            )}

            {isTmiModalOpen && (
                <div
                    className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50"
                    style={{backgroundColor:'rgba(0,0,0,0.5)'}}
                    onClick={() => setIsTmiModalOpen(false)}
                >
                    <div
                        className="relative bg-white p-6 rounded-xl max-w-2xl w-full"
                        onClick={(e) => e.stopPropagation()}
                    >
                        {/*Ïä¨ÎùºÏù¥Îçî*/}
                        <div className="relative flex items-center justify-center mb-4 h-[300px]">
                            <button
                                onClick={prevTmiSlide}
                                className="absolute left-0 p-2 text-gray-600 hover:text-black z-10"
                            >
                                <FaArrowLeft size={20}/>
                            </button>

                            <div className="w-full h-[300px] flex justify-center items-center overflow-hidden relative">
                                <AnimatePresence custom={tmiDirection} mode="wait">
                                    <motion.img
                                        key={`${tmiSlide}-${tmiSlides[tmiSlide].src}`}
                                        src={tmiSlides[tmiSlide].src}
                                        alt={`Ïä¨ÎùºÏù¥Îìú ${tmiSlide + 1}`}
                                        className="max-h-[300px] w-auto object-contain rounded-lg absolute"
                                        custom={tmiDirection}
                                        variants={variants}
                                        initial="enter"
                                        animate="center"
                                        exit="exit"
                                        transition={{
                                            x:{type: "spring", stiffness:300, damping:30},
                                            opacity:{duration:0.2},
                                        }}
                                    />
                                </AnimatePresence>
                            </div>

                            <button
                                onClick={nextTmiSlide}
                                className="absolute right-0 p-2 text-gray-600 hover:text-black z-10"
                            >
                                <FaArrowRight size={20}/>
                            </button>
                        </div>

                        {/*ÏÑ§Î™Ö ÌÖçÏä§Ìä∏*/}
                        <div className="text-center text-gray-700 mb-4">
                            <h2 className="text-xl font-bold mb-4">
                                {tmiSlides[tmiSlide].title}
                            </h2>
                            {tmiSlides[tmiSlide].paragraphs.map((para, index) => (
                                <p key={index} className="mb-2">{para}
                                    {para}
                                </p>
                            ))}
                        </div>

                        {/*Exit Î≤ÑÌäº*/}
                        <div className="flex justify-center">
                            <button
                                onClick={() => setIsTmiModalOpen(false)}
                                className="px-6 py-2 bg-red-500 text-white rounded-xl hover:bg-red-600 transition"
                            >
                                Exit
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </section>
    );
}
