"use client";

import { MouseEvent, useState } from "react";
import { Prism as SyntaxHighlighter } from "react-syntax-highlighter";
import { vscDarkPlus } from "react-syntax-highlighter/dist/esm/styles/prism";

const codeSamples: { [key: string]: string } = {
    "Hero.tsx": `'use client'

import { motion } from 'framer-motion';
import { useEffect, useRef, useState } from 'react';
import { FaArrowLeft, FaArrowRight } from 'react-icons/fa';
import { AnimatePresence } from 'framer-motion';

type ImageItem = {
    src: string;
    title: string;
    paragraphs: string[];
};

const images: ImageItem[] = [
    {
        src: '/turtle.jpg',
        title: 'üå±ÏÉùÎ™ÖÏóê ÎåÄÌïú Ïï†Ï†ïÏúºÎ°ú ÏãúÏûëÎêú Î∞∞ÏõÄ',
        paragraphs: [
            "Ïñ¥Î¶∞ ÏãúÏ†àÎ∂ÄÌÑ∞ ÏàòÏ§ë ÏÉùÎ¨º, ÌäπÌûà Í±∞Î∂ÅÏù¥Î•º ÎèåÎ≥¥Îäî Í≤ÉÏù¥ ÎÇòÏùò Ïò§Îûú Ï∑®ÎØ∏ÏòÄÏäµÎãàÎã§.",
            "Îã®ÏàúÌûà ÌÇ§Ïö∞Îäî Í≤ÉÏùÑ ÎÑòÏñ¥ÏÑú, Ïù¥ ÏûëÏùÄ ÏÉùÎ™ÖÎì§Ïù¥ Ïñ¥ÎñªÍ≤å ÌïòÎ©¥ Í±¥Í∞ïÌïòÍ≥† ÏïàÏ†ïÎêú ÌôòÍ≤ΩÏóêÏÑú ÏûêÎûÑ Ïàò ÏûàÏùÑÏßÄ Îäò Í≥†ÎØºÌï¥ÏôîÏäµÎãàÎã§.",
            "Î¨ºÏùò Ïò®ÎèÑ, ÏàòÏßà, Î®πÏù¥Ïùò Ïßà ÌïòÎÇòÌïòÎÇòÏóê Ï£ºÏùòÎ•º Í∏∞Ïö∏Ïù¥Î©∞, ÏµúÏÉÅÏùò Ïª®ÎîîÏÖòÏùÑ Ïú†ÏßÄÌï† Ïàò ÏûàÎèÑÎ°ù ÏÑ∏Ïã¨ÌïòÍ≤å Í¥ÄÏ∞∞ÌïòÍ≥† Íæ∏Ï§ÄÌûà Í¥ÄÎ¶¨Ìï¥ÏôîÏäµÎãàÎã§.",
            "Ïù¥ Í≥ºÏ†ïÏùÄ ÏÉùÎ™ÖÏóê ÎåÄÌïú Ï±ÖÏûÑÍ∞êÏùÑ Î∞∞Ïö∞Îäî ÎèôÏãúÏóê, ÎÅàÍ∏∞ÏôÄ ÏÑ∏Î∞ÄÌïú Í¥ÄÏ∞∞Î†•, ÌôòÍ≤ΩÏóê ÎåÄÌïú ÎØºÍ∞êÌïú Í∞êÏàòÏÑ±ÏùÑ ÌÇ§Ïö∞Îäî ÏãúÍ∞ÑÏù¥ÏóàÏäµÎãàÎã§.",
            "ÏßÄÍ∏àÎèÑ Ï†ÄÎäî Ïñ¥Îñ§ ÏùºÏù¥Îì† ÏÉùÎ™ÖÏùÑ ÎåÄÌïòÎìØ Ïã†Ï§ëÌïòÍ≥† Ï†ïÏÑ±Ïä§ÎüΩÍ≤å Ï†ëÍ∑ºÌïòÎ†§Í≥† Ìï©ÎãàÎã§."
        ]
    },
    {
        src: '/movie.jpg',
        title: 'üé¨ÏòÅÌôî ÏÜçÏóêÏÑú Î∞∞Ïö∞Îäî ÍµêÌõàÍ≥º Í∞êÏ†ïÏùò ÏÑ±Ïû•',
        paragraphs: [
            "ÏòÅÌôîÎäî Îã®ÏàúÌûà Ïò§ÎùΩÏ†ÅÏù∏ ÏöîÏÜåÎ•º ÎÑòÏñ¥, Í∞ÅÍ∏∞ Îã§Î•∏ Ïù∏Î¨ºÎì§Ïùò ÏÇ∂ÏùÑ Îì§Ïó¨Îã§Î≥¥Î©∞ ÍµêÌõàÏùÑ ÏñªÎäî ÏãúÍ∞ÑÏù¥ÏóàÏäµÎãàÎã§.",
            "Ï£ºÏù∏Í≥µÏù¥ Í≥†ÎÇúÏùÑ Í≤™Í≥† Ïù¥Î•º Í∑πÎ≥µÌïòÎäî Í≥ºÏ†ïÏùÄ Ï†ÄÏóêÍ≤å ÎÅàÍ∏∞ÏôÄ Ïù∏ÎÇ¥Ïùò Ï§ëÏöîÏÑ±ÏùÑ Íπ®Îã´Í≤å Ìï¥Ï£ºÏóàÏäµÎãàÎã§.",
            "ÎòêÌïú, Í∑∏Îì§Ïù¥ Í≤™Îäî Í∞êÏ†ïÏùò Î≥ÄÌôîÎÇò Í∞àÎì± Ìï¥ÏÜå Î∞©Î≤ïÏùÑ ÌÜµÌï¥ Í∞êÏÑ±Ï†ÅÏù∏ ÏÑ±Ïû•ÏùÑ Í≤ΩÌóòÌñàÏäµÎãàÎã§.",
            "Ïù¥Îü¨Ìïú Í≤ΩÌóòÎì§ÏùÄ ÌòÑÏã§ÏóêÏÑúÎèÑ Îçî ÌÅ∞ Í≤∞Îã®ÏùÑ ÎÇ¥Î¶¥ Ïàò ÏûàÍ≤å ÎèÑÏõÄÏùÑ Ï£ºÏóàÍ≥†, Ïñ¥Î†§Ïö¥ ÏÉÅÌô©ÏóêÏÑú Í∞êÏ†ïÏ†ÅÏúºÎ°ú Îçî Îã®Îã®Ìï¥Ïßà Ïàò ÏûàÎäî ÏõêÎèôÎ†•Ïù¥ ÎêòÏóàÏäµÎãàÎã§."
        ]
    },
    {
        src: '/travel.jpg',
        title: '‚úàÔ∏èÎØ∏ÎûòÏóê ÎåÄÌïú ÌÉúÎèÑ, Ïó¨ÌñâÏóêÏÑú Í∏∏ÏùÑ ÏñªÎã§.',
        paragraphs: [
            "Ïó¨ÌñâÏùÄ Ï†ÄÏùò ÏÇ∂Í≥º ÏùºÏóê ÏûàÏñ¥ÏÑúÎèÑ Ïª§Îã§ÎûÄ ÏûêÏñëÎ∂ÑÏù¥ Îê©ÎãàÎã§.",
            "ÎàÑÍµ¨Î•º ÎßåÎÇòÎì† Í∑∏ ÏÇ¨ÎûåÏùò Î∞∞Í≤ΩÏùÑ Ï°¥Ï§ëÌïòÍ≥†, Îã§ÏñëÌïú ÏãúÍ∞ÅÏùÑ Ïú†Ïó∞ÌïòÍ≤å Î∞õÏïÑÎì§Ïù¥Îäî ÌÉúÎèÑÎäî ÌòëÏóÖÏù¥ÎÇò Ïª§ÎÆ§ÎãàÏºÄÏù¥ÏÖòÏóêÏÑú Í∞ïÏ†êÏù¥ Îê©ÎãàÎã§.",
            "ÎòêÌïú, ÏòàÏ∏°Ìï† Ïàò ÏóÜÎäî ÏÉÅÌô© ÏÜçÏóêÏÑú Ïú†Ïó∞ÌïòÍ≤å ÎåÄÏ≤òÌïòÎäî Ïó¨ÌñâÏûêÏùò ÌÉúÎèÑÎäî Ï†úÍ∞Ä Ïñ¥Îñ§ Î¨∏Ï†úÏóê ÏßÅÎ©¥Ìï¥ÎèÑ Ïπ®Ï∞©ÌïòÍ≥† Ï†ÑÎûµÏ†ÅÏúºÎ°ú Ï†ëÍ∑ºÌï† Ïàò ÏûàÍ≤å ÎèÑÏôÄÏ§çÎãàÎã§.",
            "Ïó¨ÌñâÏùÄ Í≤∞Íµ≠ ‚ÄòÏÇ¨ÎûåÏùÑ Î∞∞Ïö∞Îäî ÏãúÍ∞Ñ‚ÄôÏù¥ÏóàÏäµÎãàÎã§. Í∑∏ ÎßåÎÇ® ÏÜçÏóêÏÑú Ï†ÄÎäî Îã®Îã®Ìï¥Ï°åÍ≥†, ÎèôÏãúÏóê Ïú†Ïó∞Ìï¥Ï°åÏäµÎãàÎã§. Í∑∏ÎûòÏÑú Ï†ÄÎäî ÏïûÏúºÎ°úÎèÑ Îçî ÎßéÏùÄ ÏÇ¨ÎûåÏùÑ ÎßåÎÇòÍ≥†, Îçî ÎÑìÏùÄ ÏÇ∂ÏùÑ Î∞∞Ïö∞Í∏∞ ÏúÑÌï¥ Í≥ÑÏÜçÌï¥ÏÑú ÎÇØÏÑ† Í≥≥ÏúºÎ°ú Ìñ•Ìï† Í≤ÉÏûÖÎãàÎã§."
        ]
    }
];

export default function Hero() {
    const fullText = "ÏïàÎÖïÎÖïÌïòÏÑ∏Ïöî. FEÍ∞úÎ∞úÏûêÎ•º ÍøàÍæ∏Îäî ÍπÄÎèÑÍ±¥ÏûÖÎãàÎã§.";
    const textArray = fullText.split('');
    const [displayedText, setDisplayedText] = useState('');
    const indexRef = useRef(0);
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [currentSlide, setCurrentSlide] = useState(0);
    const [direction, setDirection] = useState(0);

    useEffect(() => {
        const interval = setInterval(() => {
            if (indexRef.current < textArray.length) {
                setDisplayedText(prev => prev + (textArray[indexRef.current] ?? ''));
                indexRef.current += 1;
            } else {
                clearInterval(interval);
            }
        }, 100);
        return () => clearInterval(interval);
    }, []);

    useEffect(() => {
        document.body.style.overflow = isModalOpen ? 'hidden' : '';
        return () => { document.body.style.overflow = ''; };
    }, [isModalOpen]);

    const nextSlide = () => {
        setDirection(1);
        setCurrentSlide((prev) => (prev + 1) % images.length);
    };

    const prevSlide = () => {
        setDirection(-1);
        setCurrentSlide((prev) => (prev - 1 + images.length) % images.length);
    };

    const variants = {
        enter: (direction: number) => ({
            x: direction > 0 ? 300 : -300,
            opacity: 0,
        }),
        center: {
            x: 0,
            opacity: 1,
        },
        exit: (direction: number) => ({
            x: direction > 0 ? -300 : 300,
            opacity: 0,
        }),
    };

    return (
        <section className="relative flex flex-col items-center justify-center min-h-screen px-4 text-center overflow-hidden">
            <motion.img
                src="profileimg.jpg"
                alt="ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ"
                className="w-60 h-60 rounded-xl shadow-lg mb-6"
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 1 }}
            />

            <motion.p className="text-lg md:text-xl text-gray-700 mb-8"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 1.2, delay: 0.3 }}>
                {displayedText}
            </motion.p>

            <motion.p className="text-lg md:text-xl text-gray-300 mb-8"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 1.2, delay: 0.3 }}>
                Name : ÍπÄÎèÑÍ±¥<br />
                Birth : 97.07.02<br />
                Major : Aerospace Dynamic<br />
            </motion.p>

            <motion.div className="flex gap-4"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 1.2, delay: 0.5 }}>
                <button className="px-6 py-2 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition" onClick={() => setIsModalOpen(true)}>Hobby</button>
                <button className="px-6 py-2 bg-gray-300 text-gray-800 rounded-xl hover:bg-gray-400 transition">Î≤ÑÌäº 2</button>
            </motion.div>

            {isModalOpen && (
                <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50"
                    onClick={() => setIsModalOpen(false)}>
                    <div className="relative bg-white p-6 rounded-xl max-w-2xl w-full"
                        onClick={(e) => e.stopPropagation()}>
                        <div className="relative flex items-center justify-center mb-4 h-[300px]">
                            <button onClick={prevSlide} className="absolute left-0 p-2 text-gray-600 hover:text-black z-10">
                                <FaArrowLeft size={20} />
                            </button>
                            <div className="w-full h-[300px] flex justify-center items-center overflow-hidden relative">
                                <AnimatePresence custom={direction} mode="wait">
                                    <motion.img
                                        key={\`\${currentSlide}-\${images[currentSlide].src}\`}
                                        src={images[currentSlide].src}
                                        alt={\`Ïä¨ÎùºÏù¥Îìú \${currentSlide + 1}\`}
                                        className="max-h-[300px] w-auto object-contain rounded-lg absolute"
                                        custom={direction}
                                        variants={variants}
                                        initial="enter"
                                        animate="center"
                                        exit="exit"
                                        transition={{
                                            x: { type: "spring", stiffness: 300, damping: 30 },
                                            opacity: { duration: 0.2 }
                                        }}
                                    />
                                </AnimatePresence>
                            </div>
                            <button onClick={nextSlide} className="absolute right-0 p-2 text-gray-600 hover:text-black z-10">
                                <FaArrowRight size={20} />
                            </button>
                        </div>
                        <div className="text-center text-gray-700 mb-4">
                            <h2 className="text-xl font-bold mb-4">
                                {images[currentSlide].title}
                            </h2>
                            {images[currentSlide].paragraphs.map((para, index) => (
                                <p key={index} className="mb-2">{para}</p>
                            ))}
                        </div>
                        <div className="flex justify-center">
                            <button
                                onClick={() => setIsModalOpen(false)}
                                className="px-6 py-2 bg-red-500 text-white rounded-xl hover:bg-red-600 transition">
                                Exit
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </section>
    );
}
`.trim(),
    "CardSection.tsx": `'use client'

import { useState } from 'react';
import { motion } from 'framer-motion';
import { FaArrowRight } from 'react-icons/fa';

type Card = {
  id: number;
  title: string;
  image: string;
  content: string;
};

const cards: Card[] = [
  {
    id: 1,
    title: 'Ïπ¥Ïπ¥Ïò§ Ïä§ÌÉÄÏùº Ïπ¥Îìú',
    image: '/card1.jpg',
    content: 'Ïù¥ Ïπ¥ÎìúÎäî Í∑ÄÏó¨Ïö¥ ÎîîÏûêÏù∏ÏúºÎ°ú Ï†úÏûëÎêòÏóàÏäµÎãàÎã§.'
  },
  {
    id: 2,
    title: 'Î™®ÎçòÌïú UI',
    image: '/card2.jpg',
    content: 'Î™®ÎçòÌïòÍ≥† ÍπîÎÅîÌïú Î†àÏù¥ÏïÑÏõÉÏùò ÏòàÏãúÏûÖÎãàÎã§.'
  },
  {
    id: 3,
    title: 'Ïú†Ï†Ä ÏπúÌôîÏ†ÅÏù∏ Ïù∏ÌÑ∞ÌéòÏù¥Ïä§',
    image: '/card3.jpg',
    content: 'ÏßÅÍ¥ÄÏ†ÅÏù∏ ÎîîÏûêÏù∏ÏúºÎ°ú ÏÇ¨Ïö©ÏÑ±ÏùÑ ÎÜíÏòÄÏäµÎãàÎã§.'
  },
  {
    id: 4,
    title: 'Ïû¨ÎØ∏ÏûàÎäî Ïù∏ÌÑ∞ÎûôÏÖò',
    image: '/card4.jpg',
    content: 'ÌîÑÎ†àÏù¥Î®∏ Î™®ÏÖòÏùÑ ÌôúÏö©Ìïú Î∂ÄÎìúÎü¨Ïö¥ Ïï†ÎãàÎ©îÏù¥ÏÖò'
  },
];

export default function CardSection() {
  const [selectedCard, setSelectedCard] = useState<Card | null>(null);

  return (
    <section className="py-20 px-6 bg-gray-50">
      <h2 className="text-3xl font-bold text-center mb-12">üí° ÌîÑÎ°úÏ†ùÌä∏ Ïπ¥Îìú ÏÜåÍ∞ú</h2>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {cards.map(card => (
          <motion.div
            key={card.id}
            className="bg-white rounded-2xl shadow-lg overflow-hidden cursor-pointer hover:shadow-xl transition"
            whileHover={{ scale: 1.03 }}
            onClick={() => setSelectedCard(card)}
          >
            <img src={card.image} alt={card.title} className="w-full h-40 object-cover" />
            <div className="p-4">
              <h3 className="text-lg font-semibold mb-2">{card.title}</h3>
              <p className="text-sm text-gray-600">{card.content}</p>
              <div className="flex justify-end mt-2 text-blue-500">
                <FaArrowRight />
              </div>
            </div>
          </motion.div>
        ))}
      </div>

      {selectedCard && (
        <div
          className="fixed inset-0 bg-black bg-opacity-60 flex justify-center items-center z-50"
          onClick={() => setSelectedCard(null)}
        >
          <motion.div
            className="bg-white rounded-2xl p-6 max-w-md w-full"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 30 }}
            onClick={(e) => e.stopPropagation()}
          >
            <img src={selectedCard.image} alt={selectedCard.title} className="w-full h-48 object-cover rounded-xl mb-4" />
            <h3 className="text-xl font-bold mb-2">{selectedCard.title}</h3>
            <p className="text-gray-700 mb-4">{selectedCard.content}</p>
            <button
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
              onClick={() => setSelectedCard(null)}
            >
              Îã´Í∏∞
            </button>
          </motion.div>
        </div>
      )}
    </section>
  );
}`,
    "SkillsSection.tsx": `'use client'

import { motion } from 'framer-motion';
import { FaReact, FaHtml5, FaCss3Alt, FaNodeJs } from 'react-icons/fa';
import { SiTailwindcss, SiJavascript, SiTypescript, SiMysql, SiNextdotjs } from 'react-icons/si';

const skills = [
  { name: 'HTML', icon: <FaHtml5 className="text-orange-500" /> },
  { name: 'CSS', icon: <FaCss3Alt className="text-blue-500" /> },
  { name: 'JavaScript', icon: <SiJavascript className="text-yellow-400" /> },
  { name: 'TypeScript', icon: <SiTypescript className="text-blue-600" /> },
  { name: 'React', icon: <FaReact className="text-cyan-400" /> },
  { name: 'Next.js', icon: <SiNextdotjs className="text-black" /> },
  { name: 'Tailwind CSS', icon: <SiTailwindcss className="text-sky-400" /> },
  { name: 'Node.js', icon: <FaNodeJs className="text-green-600" /> },
  { name: 'MySQL', icon: <SiMysql className="text-blue-800" /> },
];

export default function SkillsSection() {
  return (
    <section className="py-20 px-6 bg-white">
      <h2 className="text-3xl font-bold text-center mb-12">üöÄ Í∏∞Ïà† Ïä§ÌÉù</h2>
      <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8 max-w-6xl mx-auto">
        {skills.map((skill, index) => (
          <motion.div
            key={skill.name}
            className="flex flex-col items-center justify-center p-6 bg-gray-50 rounded-2xl shadow hover:shadow-lg transition"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.4, delay: index * 0.1 }}
          >
            <div className="text-4xl mb-2">{skill.icon}</div>
            <p className="text-lg font-medium">{skill.name}</p>
          </motion.div>
        ))}
      </div>
    </section>
  );
}`,
};

{
    /*---------------------------------------------------------------------------------------------*/
}
export default function ShowCode() {
    const [selectFile, setSelectFile] = useState<string>(Object.keys(codeSamples)[0]);

    const handleButtonClick = (e: MouseEvent<HTMLButtonElement>) => {
        setSelectFile(e.currentTarget.value);
    };

    return (
        <div className="flex flex-col lg:flex-row h-screen font-sans">
            {/* Ï¢åÏ∏° Î©îÎâ¥ */}
            <aside className="w-full lg:w-1/5 bg-zinc-900 text-white p-6 space-y-4">
                <h2 className="text-2xl font-bold mb-6 border-b border-zinc-700 pb-2">Code Files</h2>
                <div className="flex flex-col space-y-2">
                    {Object.keys(codeSamples).map((file) => (
                        <button
                            key={file}
                            className={`px-4 py-2 rounded-md text-left transition ${
                                selectFile === file
                                    ? "bg-blue-500 text-white"
                                    : "bg-zinc-800 hover:bg-zinc-700 text-zinc-300"
                            }`}
                            value={file}
                            onClick={handleButtonClick}
                        >
                            {file}
                        </button>
                    ))}
                </div>
            </aside>

            {/* ÏΩîÎìúÎ∑∞ */}
            <main className="flex-grow w-full lg:w-4/5 bg-zinc-800 text-white p-6 overflow-hidden">
                <h2 className="text-2xl font-semibold mb-4 border-b border-zinc-700 pb-2">{selectFile}</h2>

                <div className="bg-zinc-900 rounded-lg shadow-inner p-4 h-[calc(100vh-10rem)] overflow-auto whitespace-pre-wrap break-words">
                    <SyntaxHighlighter
                        language="tsx"
                        style={vscDarkPlus}
                        wrapLines={true}
                        showLineNumbers
                        customStyle={{
                            backgroundColor: 'transparent',
                            padding: 0,
                            margin: 0,
                            overflowX: 'auto', // ÏàòÌèâ Ïä§ÌÅ¨Î°§ ÌóàÏö©
                            whiteSpace: 'pre-wrap', // Í∏¥ Ï§ÑÎèÑ Ï§ÑÎ∞îÍøàÎêòÎèÑÎ°ù
                            wordBreak: 'break-word',
                        }}
                    >
                        {codeSamples[selectFile]}
                    </SyntaxHighlighter>
                </div>

                {/* ÏïÑÎûò Ïù¥ÎØ∏ÏßÄ Íµ¨Ï°∞ ÏòÅÏó≠ */}
                {/*<div className="mt-8 border-t border-zinc-700 pt-6">
        <h3 className="text-xl font-semibold mb-4">üì¶ ÌîÑÎ°úÏ†ùÌä∏ Íµ¨Ï°∞</h3>
        <img src="/ureca.jpg" alt="ÌôàÌéòÏù¥ÏßÄ Íµ¨Ï°∞ÎèÑ" className="w-full rounded-lg shadow-md" />
    </div>*/}
            </main>
        </div>
    );
}
